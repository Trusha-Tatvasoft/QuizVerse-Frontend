{
    "pipes": [],
    "interfaces": [
        {
            "name": "loginDTO",
            "id": "interface-loginDTO-2e7410060f1ad4eb3711ca7e439a2c70ba72d8a2d619b2b0cf7e6a1cd7818a18e304c872f92f97de24a758453806a148e7052a68eb875adfa6a826935bd843fa",
            "file": "src/app/core/auth/interfaces/login.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface loginDTO {\r\n    email: string;\r\n    password: string\r\n}",
            "properties": [
                {
                    "name": "email",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "password",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        }
    ],
    "injectables": [],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-554d734232cc9360873bfb242bacb51fc8d2fc3c101813d1af8bd53199c057d0d5590cf6fdfc50244ca8181a145585bbd51e4cdce582bd270750bd226e312e74",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "title",
                    "defaultValue": "'QuizVerse-Frontend'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "RouterOutlet"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { RouterOutlet } from '@angular/router';\r\nimport { PageHeaderComponent } from './shared/components/page-header/page-header.component';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  imports: [RouterOutlet],\r\n  templateUrl: './app.component.html',\r\n  styleUrl: './app.component.scss',\r\n})\r\nexport class AppComponent {\r\n  title = 'QuizVerse-Frontend';\r\n}\r\n",
            "styleUrl": "./app.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<h1 class=\"text-3xl font-bold underline\">Hello world!</h1>\r\n"
        },
        {
            "name": "FilledButtonComponent",
            "id": "component-FilledButtonComponent-7c5dc10779f28fe287e012ec08c67e0b884f93955c91355f53a7a5684d893a4f1be09ae004f67c35ccbcea0370d83dad8ccbfd2689f5e3157ffb547ae3642eb6",
            "file": "src/app/shared/components/filled-button/filled-button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-filled-button",
            "styleUrls": [
                "./filled-button.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./filled-button.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "fontWeight",
                    "defaultValue": "500",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "iconFontSet",
                    "defaultValue": "'material-icons'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "\"material-icons-outlined\" | \"material-icons\"",
                    "decorators": []
                },
                {
                    "name": "imagePosition",
                    "defaultValue": "'left'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "\"left\" | \"right\"",
                    "decorators": []
                },
                {
                    "name": "imageSrc",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "'Button'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "matIcon",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "type",
                    "defaultValue": "'button'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "\"button\" | \"submit\" | \"reset\"",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "gradientFrom",
                    "defaultValue": "AppColors.globalPrimaryColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "gradientTo",
                    "defaultValue": "AppColors.globalSecondaryColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 28
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "MatButtonModule",
                    "type": "module"
                },
                {
                    "name": "MatIconModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { AppColors } from '../../../utils/constants';\r\n\r\n@Component({\r\n  selector: 'app-filled-button',\r\n  standalone: true,\r\n  imports: [CommonModule, MatButtonModule, MatIconModule],\r\n  templateUrl: './filled-button.component.html',\r\n  styleUrls: ['./filled-button.component.scss']\r\n})\r\nexport class FilledButtonComponent {\r\n\r\n  @Input() disabled: boolean = false;\r\n  @Input() imageSrc: string = '';\r\n  @Input() matIcon: string = '';\r\n  @Input() imagePosition: 'left' | 'right' = 'left';\r\n  @Input() label: string = 'Button';\r\n  @Input() fontWeight: number = 500;\r\n  @Input() type: 'button' | 'submit' | 'reset' = 'button';\r\n  @Input() iconFontSet: 'material-icons-outlined' | 'material-icons' = 'material-icons';\r\n\r\n  @Output() onClick = new EventEmitter<Event>();\r\n\r\n  gradientFrom = AppColors.globalPrimaryColor;\r\n  gradientTo = AppColors.globalSecondaryColor;\r\n\r\n  ngOnInit() {\r\n    document.documentElement.style.setProperty('--filled-btn-primary', this.gradientFrom);\r\n    document.documentElement.style.setProperty('--filled-btn-secondary', this.gradientTo);\r\n  }\r\n\r\n  get validFontWeight(): string {\r\n    return this.fontWeight?.toString() || '400';\r\n  }\r\n}",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"tailwindcss\";\r\n\r\n.filled-button {\r\n    background: linear-gradient(90deg, var(--filled-btn-primary) 12%, var(--filled-btn-secondary) 63%);\r\n    cursor: pointer;\r\n    opacity: 1;\r\n    transition: opacity 0.2s ease, cursor 0.2s ease;\r\n\r\n    &:disabled {\r\n        cursor: not-allowed;\r\n        opacity: 0.6;\r\n    }\r\n}\r\n\r\n.button-icon,\r\n.button-image {\r\n    width: 20px;\r\n    height: 20px;\r\n    font-size: 20px;\r\n    line-height: 20px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n}\r\n\r\n.button-image-only {\r\n    width: 20px;\r\n    height: 20px;\r\n    object-fit: contain;\r\n}",
                    "styleUrl": "./filled-button.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [],
            "accessors": {
                "validFontWeight": {
                    "name": "validFontWeight",
                    "getSignature": {
                        "name": "validFontWeight",
                        "type": "string",
                        "returnType": "string",
                        "line": 35
                    }
                }
            },
            "templateData": "<button \r\n  [attr.type]=\"type\" \r\n  [disabled]=\"disabled\" \r\n  (click)=\"!disabled && onClick.emit($event)\"\r\n  class=\"filled-button text-white font-medium rounded-lg text-sm px-5 py-2.5 me-2 mb-2\"\r\n>\r\n    <div class=\"button-content flex items-center justify-center gap-2\">\r\n\r\n        <ng-container *ngIf=\"imagePosition === 'left' && label !== ''\">\r\n            <mat-icon *ngIf=\"matIcon\" [fontSet]=\"iconFontSet\" class=\"button-icon\">{{ matIcon }}</mat-icon>\r\n            <img *ngIf=\"!matIcon && imageSrc\" [src]=\"imageSrc\" alt=\"button icon\" class=\"button-image\" />\r\n        </ng-container>\r\n\r\n        <div [style.fontWeight]=\"validFontWeight\" *ngIf=\"label !== ''\">{{ label }}</div>\r\n\r\n        <ng-container *ngIf=\"imagePosition === 'right' && label !== ''\">\r\n            <mat-icon *ngIf=\"matIcon\" [fontSet]=\"iconFontSet\" class=\"button-icon\">{{ matIcon }}</mat-icon>\r\n            <img *ngIf=\"!matIcon && imageSrc\" [src]=\"imageSrc\" alt=\"button icon\" class=\"button-image\" />\r\n        </ng-container>\r\n\r\n        <ng-container *ngIf=\"label === ''\">\r\n            <mat-icon *ngIf=\"matIcon\" [fontSet]=\"iconFontSet\" class=\"button-icon\">{{ matIcon }}</mat-icon>\r\n            <img *ngIf=\"!matIcon && imageSrc\" [src]=\"imageSrc\" alt=\"button icon\" class=\"button-image-only\" />\r\n        </ng-container>\r\n        \r\n    </div>\r\n</button>"
        },
        {
            "name": "ForgotPasswordComponent",
            "id": "component-ForgotPasswordComponent-4d4c05fc141147ee863b2b8702cc2bf5b0ea8c72e17cb249ff903882b58c4b59525f8f5a1cfdbde8a39687d816e9838885b1ad904e3f1aff676b6d7dc3eefe40",
            "file": "src/app/core/auth/components/forgot-password/forgot-password.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-forgot-password",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./forgot-password.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-forgot-password',\r\n  imports: [],\r\n  templateUrl: './forgot-password.component.html',\r\n  styleUrl: './forgot-password.component.scss'\r\n})\r\nexport class ForgotPasswordComponent {\r\n\r\n}\r\n",
            "styleUrl": "./forgot-password.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<p>forgot-password works!</p>\r\n"
        },
        {
            "name": "LoginComponent",
            "id": "component-LoginComponent-698c283bf73a83805b5921ee908272873eef876264f2bc08cbc24f09a2a77e286cb21cad76333ae178dd72187ee3f0da68fb37bdba9076d42b254eefc3816ba8",
            "file": "src/app/core/auth/components/login/login.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-login",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./login.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  imports: [],\r\n  templateUrl: './login.component.html',\r\n  styleUrl: './login.component.scss'\r\n})\r\nexport class LoginComponent {\r\n\r\n}\r\n",
            "styleUrl": "./login.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<p>login works!</p>\r\n"
        },
        {
            "name": "OutlineButtonComponent",
            "id": "component-OutlineButtonComponent-e7c337f6567de34760b1d27708dc7b8108195e7c00817d6d0bab195bb29a5f145b4d9875543bf38b069d3fbc00a5667090e2ba58dc6a8b2249acbb1c975eb3ce",
            "file": "src/app/shared/components/outline-button/outline-button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-outline-button",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./outline-button.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "fontWeight",
                    "defaultValue": "500",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "iconFontSet",
                    "defaultValue": "'material-icons'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "\"material-icons-outlined\" | \"material-icons\"",
                    "decorators": []
                },
                {
                    "name": "imagePosition",
                    "defaultValue": "'left'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "\"left\" | \"right\"",
                    "decorators": []
                },
                {
                    "name": "imageSrc",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "'Button'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "matIcon",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "type",
                    "defaultValue": "'button'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "\"button\" | \"submit\" | \"reset\"",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "MatButtonModule",
                    "type": "module"
                },
                {
                    "name": "MatIconModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { AppColors } from '../../../utils/constants';\r\nimport { Component, ElementRef, EventEmitter, Input, Output, Renderer2 } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-outline-button',\r\n  standalone: true,\r\n  imports: [CommonModule, MatButtonModule, MatIconModule],\r\n templateUrl: './outline-button.component.html',\r\n  styleUrl: './outline-button.component.scss'\r\n})\r\nexport class OutlineButtonComponent {\r\n\r\n  @Input() disabled: boolean = false;\r\n  @Input() imageSrc: string = '';\r\n  @Input() matIcon: string = '';\r\n  @Input() imagePosition: 'left' | 'right' = 'left';\r\n  @Input() label: string = 'Button';\r\n  @Input() fontWeight: number = 500;\r\n  @Input() type: 'button' | 'submit' | 'reset' = 'button';\r\n  @Input() iconFontSet: 'material-icons-outlined' | 'material-icons' = 'material-icons';\r\n\r\n  @Output() onClick = new EventEmitter<Event>();\r\n\r\n  ngOnInit() {\r\n    document.documentElement.style.setProperty('--outline-primary', AppColors.globalPrimaryColor);\r\n  }\r\n  \r\n  get validFontWeight(): string {\r\n    return this.fontWeight?.toString() || '400';\r\n  }\r\n}",
            "styleUrl": "./outline-button.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "accessors": {
                "validFontWeight": {
                    "name": "validFontWeight",
                    "getSignature": {
                        "name": "validFontWeight",
                        "type": "string",
                        "returnType": "string",
                        "line": 31
                    }
                }
            },
            "templateData": "<!-- <button\r\n  [attr.type]=\"type\"\r\n  [disabled]=\"disabled\"\r\n  (click)=\"!disabled && onClick.emit($event)\"\r\n  class=\"outline-button\"\r\n>\r\n  <div class=\"button-content\">\r\n    <ng-container *ngIf=\"imagePosition === 'left' && label !== ''\">\r\n      <mat-icon *ngIf=\"matIcon\" [fontSet]=\"iconFontSet\" class=\"button-icon\">{{ matIcon }}</mat-icon>\r\n      <img *ngIf=\"!matIcon && imageSrc\" [src]=\"imageSrc\" alt=\"button icon\" class=\"button-image\" />\r\n    </ng-container>\r\n\r\n    <div [style.fontWeight]=\"validFontWeight\" *ngIf=\"label !== ''\">{{ label }}</div>\r\n\r\n    <ng-container *ngIf=\"imagePosition === 'right' && label !== ''\">\r\n      <mat-icon *ngIf=\"matIcon\" [fontSet]=\"iconFontSet\" class=\"button-icon\">{{ matIcon }}</mat-icon>\r\n      <img *ngIf=\"!matIcon && imageSrc\" [src]=\"imageSrc\" alt=\"button icon\" class=\"button-image\" />\r\n    </ng-container>\r\n\r\n    <ng-container *ngIf=\"label === ''\">\r\n      <mat-icon *ngIf=\"matIcon\" [fontSet]=\"iconFontSet\" class=\"button-icon\">{{ matIcon }}</mat-icon>\r\n      <img *ngIf=\"!matIcon && imageSrc\" [src]=\"imageSrc\" alt=\"button icon\" class=\"button-image-only\" />\r\n    </ng-container>\r\n  </div>\r\n</button> -->\r\n<!-- <button [attr.type]=\"type\" [disabled]=\"disabled\" (click)=\"!disabled && onClick.emit($event)\"\r\n    class=\"bg-white border border-gray-300 text-sm font-medium rounded-lg px-5 py-2.5 me-2 mb-2 flex items-center justify-center gap-2 text-[color:var(--outline-primary)] transition-opacity duration-200 disabled:cursor-not-allowed disabled:opacity-60 cursor-pointer\"> -->\r\n    <button\r\n  [attr.type]=\"type\"\r\n  [disabled]=\"disabled\"\r\n  (click)=\"!disabled && onClick.emit($event)\"\r\n  class=\"outline-button bg-white border text-sm font-medium rounded-lg px-5 py-2.5 me-2 mb-2 flex items-center justify-center gap-2 transition-all duration-200\"\r\n>\r\n    <div class=\"flex items-center gap-2\">\r\n        <ng-container *ngIf=\"imagePosition === 'left' && label !== ''\">\r\n            <mat-icon *ngIf=\"matIcon\" [fontSet]=\"iconFontSet\"\r\n                class=\"w-5 h-5 text-[color:inherit] flex items-center justify-center\">\r\n                {{ matIcon }}\r\n            </mat-icon>\r\n            <img *ngIf=\"!matIcon && imageSrc\" [src]=\"imageSrc\" alt=\"button icon\" class=\"w-5 h-5 object-contain\" />\r\n        </ng-container>\r\n\r\n        <div [style.fontWeight]=\"validFontWeight\" *ngIf=\"label !== ''\">{{ label }}</div>\r\n\r\n        <ng-container *ngIf=\"imagePosition === 'right' && label !== ''\">\r\n            <mat-icon *ngIf=\"matIcon\" [fontSet]=\"iconFontSet\"\r\n                class=\"w-5 h-5 text-[color:inherit] flex items-center justify-center\">\r\n                {{ matIcon }}\r\n            </mat-icon>\r\n            <img *ngIf=\"!matIcon && imageSrc\" [src]=\"imageSrc\" alt=\"button icon\" class=\"w-5 h-5 object-contain\" />\r\n        </ng-container>\r\n\r\n        <ng-container *ngIf=\"label === ''\">\r\n            <mat-icon *ngIf=\"matIcon\" [fontSet]=\"iconFontSet\"\r\n                class=\"w-5 h-5 text-[color:inherit] flex items-center justify-center\">\r\n                {{ matIcon }}\r\n            </mat-icon>\r\n            <img *ngIf=\"!matIcon && imageSrc\" [src]=\"imageSrc\" alt=\"button icon\" class=\"w-5 h-5 object-contain\" />\r\n        </ng-container>\r\n    </div>\r\n</button>"
        },
        {
            "name": "PageHeaderComponent",
            "id": "component-PageHeaderComponent-607697e75eddbd8022f20bac707ab3b5981d4628bd107addb8544fd8182cf8603ea47302f9e26de21795983ed6fa40148d55784f9a7feda7533a137b1f4a1900",
            "file": "src/app/shared/components/page-header/page-header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-page-header",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./page-header.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "icon",
                    "defaultValue": "'edit'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "subtitle",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "theme",
                    "defaultValue": "'admin'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "\"admin\" | \"user\" | \"quiz\" | \"quizDifficulty\" | \"queDifficulty\" | \"email\" | \"financial\"",
                    "decorators": []
                },
                {
                    "name": "title",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "MatCardModule",
                    "type": "module"
                },
                {
                    "name": "MatIconModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { Component, Input } from '@angular/core';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatIconModule } from '@angular/material/icon';\r\n\r\n@Component({\r\n  selector: 'app-page-header',\r\n  imports: [CommonModule, MatCardModule, MatIconModule],\r\n  templateUrl: './page-header.component.html',\r\n  styleUrl: './page-header.component.scss',\r\n})\r\nexport class PageHeaderComponent {\r\n  @Input() icon: string = 'edit';\r\n  @Input() title: string = '';\r\n  @Input() subtitle: string = '';\r\n  @Input() theme:\r\n    | 'admin'\r\n    | 'user'\r\n    | 'quiz'\r\n    | 'quizDifficulty'\r\n    | 'queDifficulty'\r\n    | 'email'\r\n    | 'financial' = 'admin';\r\n}\r\n",
            "styleUrl": "./page-header.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<mat-card class=\"page-header-card\" [ngClass]=\"theme\">\r\n  <div class=\"header-content\">\r\n    <mat-icon class=\"icon material-icons-outlined\">{{ icon }}</mat-icon>\r\n    <div>\r\n      <h2 class=\"title\">{{ title }}</h2>\r\n      <p class=\"subtitle\">{{ subtitle }}</p>\r\n    </div>\r\n  </div>\r\n</mat-card>\r\n"
        }
    ],
    "modules": [],
    "miscellaneous": {
        "variables": [
            {
                "name": "AppColors",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/utils/constants.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n    adminBackgroundColor: 'linear-gradient(to right, #fff4f2, #fffaf6)',\r\n    adminTextColor: 'rgb(153 27 27 / var(--tw-text-opacity, 1))',\r\n    adminBorderColor: 'rgb(254 202 202 / var(--tw-border-opacity, 1))',\r\n    adminSubtitleColor: 'rgb(185 28 28 / var(--tw-text-opacity, 1))',\r\n\r\n    userBackgroundColor: 'linear-gradient(to right, #eff6ff, #e0f2fe)', // soft blue tones\r\n    userTextColor: '#1e40af',\r\n    userBorderColor: '#bfdbfe',\r\n    userSubtitleColor: '#1d4ed8',\r\n\r\n    quizBackgroundColor: 'linear-gradient(to right, #ecebff, #f3f4ff)', // violet tones\r\n    quizTextColor: '#3730a3',\r\n    quizBorderColor: '#c7d2fe',\r\n    quizSubtitleColor: '#4338ca',\r\n\r\n    queDifficultyBackgroundColor: 'linear-gradient(to right, #f3e8ff, #faf5ff)', // purple pastel\r\n    queDifficultyTextColor: '#6b21a8',\r\n    queDifficultyBorderColor: '#e9d5ff',\r\n    queDifficultySubtitleColor: '#7e22ce',\r\n\r\n    quizDifficultyBackgroundColor: 'linear-gradient(to right, #fff7ed, #fff3e0)', // soft orange\r\n    quizDifficultyTextColor: '#9a3412',\r\n    quizDifficultyBorderColor: '#fed7aa',\r\n    quizDifficultySubtitleColor: '#c2410c',\r\n\r\n    emailBackgroundColor: 'linear-gradient(to right, #eff6ff, #e0f2fe)', // same as user\r\n    emailTextColor: '#1e40af',\r\n    emailBorderColor: '#bfdbfe',\r\n    emailSubtitleColor: '#1d4ed8',\r\n\r\n    financialBackgroundColor: 'linear-gradient(to right, #ecfdf5, #d1fae5)', // mint green\r\n    financialTextColor: '#065f46',\r\n    financialBorderColor: '#a7f3d0',\r\n    financialSubtitleColor: '#047857',\r\n\r\n    darkText: '#333',\r\n\r\n    globalPrimaryColor: '#9333ea',\r\n    globalSecondaryColor: '#2563eb'\r\n}"
            },
            {
                "name": "appConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/app.config.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ApplicationConfig",
                "defaultValue": "{\r\n  providers: [provideZoneChangeDetection({ eventCoalescing: true }), provideRouter(routes)]\r\n}"
            },
            {
                "name": "authGuard",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/guards/auth.guard.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "CanActivateFn",
                "defaultValue": "(route, state) => {\r\n  return true;\r\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.dev.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n    production: false,\r\n    baseUrl: \"https://localhost:48348/api\",\r\n}"
            },
            {
                "name": "errorHandlerInterceptor",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/interceptors/error-handler.interceptor.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "HttpInterceptorFn",
                "defaultValue": "(req, next) => {\r\n  return next(req);\r\n}"
            }
        ],
        "functions": [],
        "typealiases": [],
        "enumerations": [],
        "groupedVariables": {
            "src/app/utils/constants.ts": [
                {
                    "name": "AppColors",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/utils/constants.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n    adminBackgroundColor: 'linear-gradient(to right, #fff4f2, #fffaf6)',\r\n    adminTextColor: 'rgb(153 27 27 / var(--tw-text-opacity, 1))',\r\n    adminBorderColor: 'rgb(254 202 202 / var(--tw-border-opacity, 1))',\r\n    adminSubtitleColor: 'rgb(185 28 28 / var(--tw-text-opacity, 1))',\r\n\r\n    userBackgroundColor: 'linear-gradient(to right, #eff6ff, #e0f2fe)', // soft blue tones\r\n    userTextColor: '#1e40af',\r\n    userBorderColor: '#bfdbfe',\r\n    userSubtitleColor: '#1d4ed8',\r\n\r\n    quizBackgroundColor: 'linear-gradient(to right, #ecebff, #f3f4ff)', // violet tones\r\n    quizTextColor: '#3730a3',\r\n    quizBorderColor: '#c7d2fe',\r\n    quizSubtitleColor: '#4338ca',\r\n\r\n    queDifficultyBackgroundColor: 'linear-gradient(to right, #f3e8ff, #faf5ff)', // purple pastel\r\n    queDifficultyTextColor: '#6b21a8',\r\n    queDifficultyBorderColor: '#e9d5ff',\r\n    queDifficultySubtitleColor: '#7e22ce',\r\n\r\n    quizDifficultyBackgroundColor: 'linear-gradient(to right, #fff7ed, #fff3e0)', // soft orange\r\n    quizDifficultyTextColor: '#9a3412',\r\n    quizDifficultyBorderColor: '#fed7aa',\r\n    quizDifficultySubtitleColor: '#c2410c',\r\n\r\n    emailBackgroundColor: 'linear-gradient(to right, #eff6ff, #e0f2fe)', // same as user\r\n    emailTextColor: '#1e40af',\r\n    emailBorderColor: '#bfdbfe',\r\n    emailSubtitleColor: '#1d4ed8',\r\n\r\n    financialBackgroundColor: 'linear-gradient(to right, #ecfdf5, #d1fae5)', // mint green\r\n    financialTextColor: '#065f46',\r\n    financialBorderColor: '#a7f3d0',\r\n    financialSubtitleColor: '#047857',\r\n\r\n    darkText: '#333',\r\n\r\n    globalPrimaryColor: '#9333ea',\r\n    globalSecondaryColor: '#2563eb'\r\n}"
                }
            ],
            "src/app/app.config.ts": [
                {
                    "name": "appConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/app.config.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ApplicationConfig",
                    "defaultValue": "{\r\n  providers: [provideZoneChangeDetection({ eventCoalescing: true }), provideRouter(routes)]\r\n}"
                }
            ],
            "src/app/guards/auth.guard.ts": [
                {
                    "name": "authGuard",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/guards/auth.guard.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "CanActivateFn",
                    "defaultValue": "(route, state) => {\r\n  return true;\r\n}"
                }
            ],
            "src/environments/environment.dev.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.dev.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n    production: false,\r\n    baseUrl: \"https://localhost:48348/api\",\r\n}"
                }
            ],
            "src/app/interceptors/error-handler.interceptor.ts": [
                {
                    "name": "errorHandlerInterceptor",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/interceptors/error-handler.interceptor.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "HttpInterceptorFn",
                    "defaultValue": "(req, next) => {\r\n  return next(req);\r\n}"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {}
    },
    "routes": [],
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/app.config.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "appConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/auth/components/forgot-password/forgot-password.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ForgotPasswordComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/auth/components/login/login.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LoginComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/auth/interfaces/login.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "loginDTO",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/guards/auth.guard.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "authGuard",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/interceptors/error-handler.interceptor.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "errorHandlerInterceptor",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/filled-button/filled-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FilledButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/outline-button/outline-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "OutlineButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/page-header/page-header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PageHeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/utils/constants.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "AppColors",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.dev.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}