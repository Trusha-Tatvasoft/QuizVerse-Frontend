{
    "pipes": [],
    "interfaces": [
        {
            "name": "loginDTO",
            "id": "interface-loginDTO-2e7410060f1ad4eb3711ca7e439a2c70ba72d8a2d619b2b0cf7e6a1cd7818a18e304c872f92f97de24a758453806a148e7052a68eb875adfa6a826935bd843fa",
            "file": "src/app/core/auth/interfaces/login.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface loginDTO {\r\n    email: string;\r\n    password: string\r\n}",
            "properties": [
                {
                    "name": "email",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "password",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        }
    ],
    "injectables": [],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-554d734232cc9360873bfb242bacb51fc8d2fc3c101813d1af8bd53199c057d0d5590cf6fdfc50244ca8181a145585bbd51e4cdce582bd270750bd226e312e74",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "title",
                    "defaultValue": "'QuizVerse-Frontend'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "RouterOutlet"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { RouterOutlet } from '@angular/router';\r\nimport { PageHeaderComponent } from './shared/components/page-header/page-header.component';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  imports: [RouterOutlet],\r\n  templateUrl: './app.component.html',\r\n  styleUrl: './app.component.scss',\r\n})\r\nexport class AppComponent {\r\n  title = 'QuizVerse-Frontend';\r\n}\r\n",
            "styleUrl": "./app.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<h1 class=\"text-3xl font-bold underline\">Hello world!</h1>\r\n"
        },
        {
            "name": "FilledButtonComponent",
            "id": "component-FilledButtonComponent-4a0c51018e59650ae20b97b4f308f18f0e979f6a2efcae368e67d6f02e261ae3f9a24fe0e989e61e0440ee3d99f92a33e6e56c307b4ac62b287c43f10332376f",
            "file": "src/app/shared/components/filled-button/filled-button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-filled-button",
            "styleUrls": [
                "./filled-button.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./filled-button.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "fontWeight",
                    "defaultValue": "500",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "iconFontSet",
                    "defaultValue": "'material-icons'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "\"material-icons-outlined\" | \"material-icons\"",
                    "decorators": []
                },
                {
                    "name": "imagePosition",
                    "defaultValue": "'left'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "\"left\" | \"right\"",
                    "decorators": []
                },
                {
                    "name": "imageSrc",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "'Button'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "matIcon",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "type",
                    "defaultValue": "'button'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "\"button\" | \"submit\" | \"reset\"",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "gradientFrom",
                    "defaultValue": "AppColors.globalPrimaryColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "gradientTo",
                    "defaultValue": "AppColors.globalSecondaryColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 27
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "MatButtonModule",
                    "type": "module"
                },
                {
                    "name": "MatIconModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { AppColors } from '../../../utils/constants';\n\n@Component({\n  selector: 'app-filled-button',\n  standalone: true,\n  imports: [CommonModule, MatButtonModule, MatIconModule],\n  templateUrl: './filled-button.component.html',\n  styleUrls: ['./filled-button.component.scss'],\n})\nexport class FilledButtonComponent {\n  @Input() disabled: boolean = false;\n  @Input() imageSrc: string = '';\n  @Input() matIcon: string = '';\n  @Input() imagePosition: 'left' | 'right' = 'left';\n  @Input() label: string = 'Button';\n  @Input() fontWeight: number = 500;\n  @Input() type: 'button' | 'submit' | 'reset' = 'button';\n  @Input() iconFontSet: 'material-icons-outlined' | 'material-icons' = 'material-icons';\n\n  @Output() onClick = new EventEmitter<Event>();\n\n  gradientFrom = AppColors.globalPrimaryColor;\n  gradientTo = AppColors.globalSecondaryColor;\n\n  ngOnInit() {\n    document.documentElement.style.setProperty('--filled-btn-primary', this.gradientFrom);\n    document.documentElement.style.setProperty('--filled-btn-secondary', this.gradientTo);\n  }\n\n  get validFontWeight(): string {\n    return this.fontWeight?.toString() || '400';\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import 'tailwindcss';\n\n.filled-button {\n  background: linear-gradient(\n    90deg,\n    var(--filled-btn-primary) 12%,\n    var(--filled-btn-secondary) 63%\n  );\n  cursor: pointer;\n  opacity: 1;\n  transition:\n    opacity 0.2s ease,\n    cursor 0.2s ease;\n\n  &:hover:not(:disabled) {\n    opacity: 0.85;\n  }\n\n  &:disabled {\n    cursor: not-allowed;\n    opacity: 0.6;\n  }\n}\n\n.button-icon,\n.button-image {\n  width: 20px;\n  height: 20px;\n  font-size: 20px;\n  line-height: 20px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.button-image-only {\n  width: 20px;\n  height: 20px;\n  object-fit: contain;\n}\n",
                    "styleUrl": "./filled-button.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [],
            "accessors": {
                "validFontWeight": {
                    "name": "validFontWeight",
                    "getSignature": {
                        "name": "validFontWeight",
                        "type": "string",
                        "returnType": "string",
                        "line": 34
                    }
                }
            },
            "templateData": "<button\n  [attr.type]=\"type\"\n  [disabled]=\"disabled\"\n  (click)=\"!disabled && onClick.emit($event)\"\n  class=\"filled-button text-white font-medium rounded-lg text-sm px-5 py-2.5 me-2 mb-2\"\n>\n  <div class=\"button-content flex items-center justify-center gap-2\">\n    <ng-container *ngIf=\"imagePosition === 'left' && label !== ''\">\n      <mat-icon *ngIf=\"matIcon\" [fontSet]=\"iconFontSet\" class=\"button-icon\">{{ matIcon }}</mat-icon>\n      <img *ngIf=\"!matIcon && imageSrc\" [src]=\"imageSrc\" alt=\"button icon\" class=\"button-image\" />\n    </ng-container>\n\n    <div [style.fontWeight]=\"validFontWeight\" *ngIf=\"label !== ''\">{{ label }}</div>\n\n    <ng-container *ngIf=\"imagePosition === 'right' && label !== ''\">\n      <mat-icon *ngIf=\"matIcon\" [fontSet]=\"iconFontSet\" class=\"button-icon\">{{ matIcon }}</mat-icon>\n      <img *ngIf=\"!matIcon && imageSrc\" [src]=\"imageSrc\" alt=\"button icon\" class=\"button-image\" />\n    </ng-container>\n\n    <ng-container *ngIf=\"label === ''\">\n      <mat-icon *ngIf=\"matIcon\" [fontSet]=\"iconFontSet\" class=\"button-icon\">{{ matIcon }}</mat-icon>\n      <img\n        *ngIf=\"!matIcon && imageSrc\"\n        [src]=\"imageSrc\"\n        alt=\"button icon\"\n        class=\"button-image-only\"\n      />\n    </ng-container>\n  </div>\n</button>\n"
        },
        {
            "name": "ForgotPasswordComponent",
            "id": "component-ForgotPasswordComponent-4d4c05fc141147ee863b2b8702cc2bf5b0ea8c72e17cb249ff903882b58c4b59525f8f5a1cfdbde8a39687d816e9838885b1ad904e3f1aff676b6d7dc3eefe40",
            "file": "src/app/core/auth/components/forgot-password/forgot-password.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-forgot-password",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./forgot-password.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-forgot-password',\r\n  imports: [],\r\n  templateUrl: './forgot-password.component.html',\r\n  styleUrl: './forgot-password.component.scss'\r\n})\r\nexport class ForgotPasswordComponent {\r\n\r\n}\r\n",
            "styleUrl": "./forgot-password.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<p>forgot-password works!</p>\r\n"
        },
        {
            "name": "LoginComponent",
            "id": "component-LoginComponent-698c283bf73a83805b5921ee908272873eef876264f2bc08cbc24f09a2a77e286cb21cad76333ae178dd72187ee3f0da68fb37bdba9076d42b254eefc3816ba8",
            "file": "src/app/core/auth/components/login/login.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-login",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./login.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  imports: [],\r\n  templateUrl: './login.component.html',\r\n  styleUrl: './login.component.scss'\r\n})\r\nexport class LoginComponent {\r\n\r\n}\r\n",
            "styleUrl": "./login.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<p>login works!</p>\r\n"
        },
        {
            "name": "OutlineButtonComponent",
            "id": "component-OutlineButtonComponent-c7f52e931eeb2b4efd84fdba57b346edc89efa84a21625906c352399490ecbbd2425ee70c531a421c99a06b7035f0876fcce0cc6b729f0cd0dae0910a3412983",
            "file": "src/app/shared/components/outline-button/outline-button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-outline-button",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./outline-button.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "fontWeight",
                    "defaultValue": "500",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "iconFontSet",
                    "defaultValue": "'material-icons'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "\"material-icons-outlined\" | \"material-icons\"",
                    "decorators": []
                },
                {
                    "name": "imagePosition",
                    "defaultValue": "'left'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "\"left\" | \"right\"",
                    "decorators": []
                },
                {
                    "name": "imageSrc",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "'Button'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "matIcon",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "type",
                    "defaultValue": "'button'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "\"button\" | \"submit\" | \"reset\"",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "MatButtonModule",
                    "type": "module"
                },
                {
                    "name": "MatIconModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { AppColors } from '../../../utils/constants';\nimport { Component, ElementRef, EventEmitter, Input, Output, Renderer2 } from '@angular/core';\n\n@Component({\n  selector: 'app-outline-button',\n  standalone: true,\n  imports: [CommonModule, MatButtonModule, MatIconModule],\n  templateUrl: './outline-button.component.html',\n  styleUrl: './outline-button.component.scss',\n})\nexport class OutlineButtonComponent {\n  @Input() disabled: boolean = false;\n  @Input() imageSrc: string = '';\n  @Input() matIcon: string = '';\n  @Input() imagePosition: 'left' | 'right' = 'left';\n  @Input() label: string = 'Button';\n  @Input() fontWeight: number = 500;\n  @Input() type: 'button' | 'submit' | 'reset' = 'button';\n  @Input() iconFontSet: 'material-icons-outlined' | 'material-icons' = 'material-icons';\n\n  @Output() onClick = new EventEmitter<Event>();\n\n  ngOnInit() {\n    document.documentElement.style.setProperty('--outline-primary', AppColors.globalPrimaryColor);\n  }\n\n  get validFontWeight(): string {\n    return this.fontWeight?.toString() || '400';\n  }\n}\n",
            "styleUrl": "./outline-button.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "accessors": {
                "validFontWeight": {
                    "name": "validFontWeight",
                    "getSignature": {
                        "name": "validFontWeight",
                        "type": "string",
                        "returnType": "string",
                        "line": 30
                    }
                }
            },
            "templateData": "<button\n  [attr.type]=\"type\"\n  [disabled]=\"disabled\"\n  (click)=\"!disabled && onClick.emit($event)\"\n  class=\"outline-button bg-white border text-sm font-medium rounded-lg px-5 py-2.5 me-2 mb-2 flex items-center justify-center gap-2 transition-all duration-200\"\n>\n  <div class=\"flex items-center gap-2\">\n    <ng-container *ngIf=\"imagePosition === 'left' && label !== ''\">\n      <mat-icon\n        *ngIf=\"matIcon\"\n        [fontSet]=\"iconFontSet\"\n        class=\"w-5 h-5 text-[color:inherit] flex items-center justify-center\"\n      >\n        {{ matIcon }}\n      </mat-icon>\n      <img\n        *ngIf=\"!matIcon && imageSrc\"\n        [src]=\"imageSrc\"\n        alt=\"button icon\"\n        class=\"w-5 h-5 object-contain\"\n      />\n    </ng-container>\n\n    <div [style.fontWeight]=\"validFontWeight\" *ngIf=\"label !== ''\">{{ label }}</div>\n\n    <ng-container *ngIf=\"imagePosition === 'right' && label !== ''\">\n      <mat-icon\n        *ngIf=\"matIcon\"\n        [fontSet]=\"iconFontSet\"\n        class=\"w-5 h-5 text-[color:inherit] flex items-center justify-center\"\n      >\n        {{ matIcon }}\n      </mat-icon>\n      <img\n        *ngIf=\"!matIcon && imageSrc\"\n        [src]=\"imageSrc\"\n        alt=\"button icon\"\n        class=\"w-5 h-5 object-contain\"\n      />\n    </ng-container>\n\n    <ng-container *ngIf=\"label === ''\">\n      <mat-icon\n        *ngIf=\"matIcon\"\n        [fontSet]=\"iconFontSet\"\n        class=\"w-5 h-5 text-[color:inherit] flex items-center justify-center\"\n      >\n        {{ matIcon }}\n      </mat-icon>\n      <img\n        *ngIf=\"!matIcon && imageSrc\"\n        [src]=\"imageSrc\"\n        alt=\"button icon\"\n        class=\"w-5 h-5 object-contain\"\n      />\n    </ng-container>\n  </div>\n</button>\n"
        },
        {
            "name": "PageHeaderComponent",
            "id": "component-PageHeaderComponent-607697e75eddbd8022f20bac707ab3b5981d4628bd107addb8544fd8182cf8603ea47302f9e26de21795983ed6fa40148d55784f9a7feda7533a137b1f4a1900",
            "file": "src/app/shared/components/page-header/page-header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-page-header",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./page-header.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "icon",
                    "defaultValue": "'edit'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "subtitle",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "theme",
                    "defaultValue": "'admin'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "\"admin\" | \"user\" | \"quiz\" | \"quizDifficulty\" | \"queDifficulty\" | \"email\" | \"financial\"",
                    "decorators": []
                },
                {
                    "name": "title",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "MatCardModule",
                    "type": "module"
                },
                {
                    "name": "MatIconModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { Component, Input } from '@angular/core';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatIconModule } from '@angular/material/icon';\r\n\r\n@Component({\r\n  selector: 'app-page-header',\r\n  imports: [CommonModule, MatCardModule, MatIconModule],\r\n  templateUrl: './page-header.component.html',\r\n  styleUrl: './page-header.component.scss',\r\n})\r\nexport class PageHeaderComponent {\r\n  @Input() icon: string = 'edit';\r\n  @Input() title: string = '';\r\n  @Input() subtitle: string = '';\r\n  @Input() theme:\r\n    | 'admin'\r\n    | 'user'\r\n    | 'quiz'\r\n    | 'quizDifficulty'\r\n    | 'queDifficulty'\r\n    | 'email'\r\n    | 'financial' = 'admin';\r\n}\r\n",
            "styleUrl": "./page-header.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<mat-card class=\"page-header-card\" [ngClass]=\"theme\">\r\n  <div class=\"header-content\">\r\n    <mat-icon class=\"icon material-icons-outlined\">{{ icon }}</mat-icon>\r\n    <div>\r\n      <h2 class=\"title\">{{ title }}</h2>\r\n      <p class=\"subtitle\">{{ subtitle }}</p>\r\n    </div>\r\n  </div>\r\n</mat-card>\r\n"
        },
        {
            "name": "TextButtonComponent",
            "id": "component-TextButtonComponent-c199ea84415ae7af6f73f335e26ec112456d20a871dfbb86e219cf37581054f665ddd06d3ddc87148d82dfb3370f54307e4d7b1b26a3fc8a9a509287769e6e22",
            "file": "src/app/shared/components/text-button/text-button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-outline-button",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./text-button.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "fontWeight",
                    "defaultValue": "500",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "iconFontSet",
                    "defaultValue": "'material-icons'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "\"material-icons-outlined\" | \"material-icons\"",
                    "decorators": []
                },
                {
                    "name": "imagePosition",
                    "defaultValue": "'left'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "\"left\" | \"right\"",
                    "decorators": []
                },
                {
                    "name": "imageSrc",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "'Button'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "matIcon",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "type",
                    "defaultValue": "'button'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "\"button\" | \"submit\" | \"reset\"",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "MatButtonModule",
                    "type": "module"
                },
                {
                    "name": "MatIconModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { AppColors } from '../../../utils/constants';\nimport { Component, ElementRef, EventEmitter, Input, Output, Renderer2 } from '@angular/core';\n\n@Component({\n  selector: 'app-outline-button',\n  standalone: true,\n  imports: [CommonModule, MatButtonModule, MatIconModule],\n  templateUrl: './text-button.component.html',\n  styleUrl: './text-button.component.scss',\n})\nexport class TextButtonComponent {\n  @Input() disabled: boolean = false;\n  @Input() imageSrc: string = '';\n  @Input() matIcon: string = '';\n  @Input() imagePosition: 'left' | 'right' = 'left';\n  @Input() label: string = 'Button';\n  @Input() fontWeight: number = 500;\n  @Input() type: 'button' | 'submit' | 'reset' = 'button';\n  @Input() iconFontSet: 'material-icons-outlined' | 'material-icons' = 'material-icons';\n\n  @Output() onClick = new EventEmitter<Event>();\n\n  ngOnInit() {\n    document.documentElement.style.setProperty('--outline-primary', AppColors.globalSecondaryColor);\n  }\n\n  get validFontWeight(): string {\n    return this.fontWeight?.toString() || '400';\n  }\n}\n",
            "styleUrl": "./text-button.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "accessors": {
                "validFontWeight": {
                    "name": "validFontWeight",
                    "getSignature": {
                        "name": "validFontWeight",
                        "type": "string",
                        "returnType": "string",
                        "line": 30
                    }
                }
            },
            "templateData": "<button\n  [attr.type]=\"type\"\n  [disabled]=\"disabled\"\n  (click)=\"!disabled && onClick.emit($event)\"\n  class=\"outline-button bg-white text-sm font-medium rounded-lg px-5 py-2.5 me-2 mb-2 flex items-center justify-center gap-2 transition-all duration-200\"\n>\n  <div class=\"flex items-center gap-2\">\n    <ng-container *ngIf=\"imagePosition === 'left' && label !== ''\">\n      <mat-icon\n        *ngIf=\"matIcon\"\n        [fontSet]=\"iconFontSet\"\n        class=\"w-5 h-5 text-[color:inherit] flex items-center justify-center\"\n      >\n        {{ matIcon }}\n      </mat-icon>\n      <img\n        *ngIf=\"!matIcon && imageSrc\"\n        [src]=\"imageSrc\"\n        alt=\"button icon\"\n        class=\"w-5 h-5 object-contain\"\n      />\n    </ng-container>\n\n    <div [style.fontWeight]=\"validFontWeight\" *ngIf=\"label !== ''\">{{ label }}</div>\n\n    <ng-container *ngIf=\"imagePosition === 'right' && label !== ''\">\n      <mat-icon\n        *ngIf=\"matIcon\"\n        [fontSet]=\"iconFontSet\"\n        class=\"w-5 h-5 text-[color:inherit] flex items-center justify-center\"\n      >\n        {{ matIcon }}\n      </mat-icon>\n      <img\n        *ngIf=\"!matIcon && imageSrc\"\n        [src]=\"imageSrc\"\n        alt=\"button icon\"\n        class=\"w-5 h-5 object-contain\"\n      />\n    </ng-container>\n\n    <ng-container *ngIf=\"label === ''\">\n      <mat-icon\n        *ngIf=\"matIcon\"\n        [fontSet]=\"iconFontSet\"\n        class=\"w-5 h-5 text-[color:inherit] flex items-center justify-center\"\n      >\n        {{ matIcon }}\n      </mat-icon>\n      <img\n        *ngIf=\"!matIcon && imageSrc\"\n        [src]=\"imageSrc\"\n        alt=\"button icon\"\n        class=\"w-5 h-5 object-contain\"\n      />\n    </ng-container>\n  </div>\n</button>\n"
        }
    ],
    "modules": [],
    "miscellaneous": {
        "variables": [
            {
                "name": "AppColors",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/utils/constants.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  adminBackgroundColor: 'linear-gradient(to right, #fff4f2, #fffaf6)',\n  adminTextColor: 'rgb(153 27 27 / var(--tw-text-opacity, 1))',\n  adminBorderColor: 'rgb(254 202 202 / var(--tw-border-opacity, 1))',\n  adminSubtitleColor: 'rgb(185 28 28 / var(--tw-text-opacity, 1))',\n\n  userBackgroundColor: 'linear-gradient(to right, #eff6ff, #e0f2fe)', // soft blue tones\n  userTextColor: '#1e40af',\n  userBorderColor: '#bfdbfe',\n  userSubtitleColor: '#1d4ed8',\n\n  quizBackgroundColor: 'linear-gradient(to right, #ecebff, #f3f4ff)', // violet tones\n  quizTextColor: '#3730a3',\n  quizBorderColor: '#c7d2fe',\n  quizSubtitleColor: '#4338ca',\n\n  queDifficultyBackgroundColor: 'linear-gradient(to right, #f3e8ff, #faf5ff)', // purple pastel\n  queDifficultyTextColor: '#6b21a8',\n  queDifficultyBorderColor: '#e9d5ff',\n  queDifficultySubtitleColor: '#7e22ce',\n\n  quizDifficultyBackgroundColor: 'linear-gradient(to right, #fff7ed, #fff3e0)', // soft orange\n  quizDifficultyTextColor: '#9a3412',\n  quizDifficultyBorderColor: '#fed7aa',\n  quizDifficultySubtitleColor: '#c2410c',\n\n  emailBackgroundColor: 'linear-gradient(to right, #eff6ff, #e0f2fe)', // same as user\n  emailTextColor: '#1e40af',\n  emailBorderColor: '#bfdbfe',\n  emailSubtitleColor: '#1d4ed8',\n\n  financialBackgroundColor: 'linear-gradient(to right, #ecfdf5, #d1fae5)', // mint green\n  financialTextColor: '#065f46',\n  financialBorderColor: '#a7f3d0',\n  financialSubtitleColor: '#047857',\n\n  darkText: '#333',\n\n  globalPrimaryColor: '#9333ea',\n  globalSecondaryColor: '#2563eb',\n}"
            },
            {
                "name": "appConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/app.config.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ApplicationConfig",
                "defaultValue": "{\r\n  providers: [provideZoneChangeDetection({ eventCoalescing: true }), provideRouter(routes)]\r\n}"
            },
            {
                "name": "authGuard",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/guards/auth.guard.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "CanActivateFn",
                "defaultValue": "(route, state) => {\r\n  return true;\r\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.dev.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n    production: false,\r\n    baseUrl: \"https://localhost:48348/api\",\r\n}"
            },
            {
                "name": "errorHandlerInterceptor",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/interceptors/error-handler.interceptor.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "HttpInterceptorFn",
                "defaultValue": "(req, next) => {\r\n  return next(req);\r\n}"
            }
        ],
        "functions": [],
        "typealiases": [],
        "enumerations": [],
        "groupedVariables": {
            "src/app/utils/constants.ts": [
                {
                    "name": "AppColors",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/utils/constants.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  adminBackgroundColor: 'linear-gradient(to right, #fff4f2, #fffaf6)',\n  adminTextColor: 'rgb(153 27 27 / var(--tw-text-opacity, 1))',\n  adminBorderColor: 'rgb(254 202 202 / var(--tw-border-opacity, 1))',\n  adminSubtitleColor: 'rgb(185 28 28 / var(--tw-text-opacity, 1))',\n\n  userBackgroundColor: 'linear-gradient(to right, #eff6ff, #e0f2fe)', // soft blue tones\n  userTextColor: '#1e40af',\n  userBorderColor: '#bfdbfe',\n  userSubtitleColor: '#1d4ed8',\n\n  quizBackgroundColor: 'linear-gradient(to right, #ecebff, #f3f4ff)', // violet tones\n  quizTextColor: '#3730a3',\n  quizBorderColor: '#c7d2fe',\n  quizSubtitleColor: '#4338ca',\n\n  queDifficultyBackgroundColor: 'linear-gradient(to right, #f3e8ff, #faf5ff)', // purple pastel\n  queDifficultyTextColor: '#6b21a8',\n  queDifficultyBorderColor: '#e9d5ff',\n  queDifficultySubtitleColor: '#7e22ce',\n\n  quizDifficultyBackgroundColor: 'linear-gradient(to right, #fff7ed, #fff3e0)', // soft orange\n  quizDifficultyTextColor: '#9a3412',\n  quizDifficultyBorderColor: '#fed7aa',\n  quizDifficultySubtitleColor: '#c2410c',\n\n  emailBackgroundColor: 'linear-gradient(to right, #eff6ff, #e0f2fe)', // same as user\n  emailTextColor: '#1e40af',\n  emailBorderColor: '#bfdbfe',\n  emailSubtitleColor: '#1d4ed8',\n\n  financialBackgroundColor: 'linear-gradient(to right, #ecfdf5, #d1fae5)', // mint green\n  financialTextColor: '#065f46',\n  financialBorderColor: '#a7f3d0',\n  financialSubtitleColor: '#047857',\n\n  darkText: '#333',\n\n  globalPrimaryColor: '#9333ea',\n  globalSecondaryColor: '#2563eb',\n}"
                }
            ],
            "src/app/app.config.ts": [
                {
                    "name": "appConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/app.config.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ApplicationConfig",
                    "defaultValue": "{\r\n  providers: [provideZoneChangeDetection({ eventCoalescing: true }), provideRouter(routes)]\r\n}"
                }
            ],
            "src/app/guards/auth.guard.ts": [
                {
                    "name": "authGuard",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/guards/auth.guard.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "CanActivateFn",
                    "defaultValue": "(route, state) => {\r\n  return true;\r\n}"
                }
            ],
            "src/environments/environment.dev.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.dev.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n    production: false,\r\n    baseUrl: \"https://localhost:48348/api\",\r\n}"
                }
            ],
            "src/app/interceptors/error-handler.interceptor.ts": [
                {
                    "name": "errorHandlerInterceptor",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/interceptors/error-handler.interceptor.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "HttpInterceptorFn",
                    "defaultValue": "(req, next) => {\r\n  return next(req);\r\n}"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {}
    },
    "routes": [],
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/app.config.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "appConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/auth/components/forgot-password/forgot-password.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ForgotPasswordComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/auth/components/login/login.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LoginComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/auth/interfaces/login.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "loginDTO",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/guards/auth.guard.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "authGuard",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/interceptors/error-handler.interceptor.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "errorHandlerInterceptor",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/filled-button/filled-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FilledButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/outline-button/outline-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "OutlineButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/page-header/page-header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PageHeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/text-button/text-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TextButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/utils/constants.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "AppColors",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.dev.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}