{
    "pipes": [],
    "interfaces": [
        {
            "name": "ActionIcon",
            "id": "interface-ActionIcon-0b7302305511d14c5035f4f164a570f52bb07aee6e383ead00b94b5d124f99a490cf7bc722708d580940ee84e9272af44ad942cdd0b98d15961cdaac6be56297",
            "file": "src/app/shared/interfaces/table.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface ColumnDef {\n  key: string;\n  label: string;\n  type: 'text' | 'tag' | 'button' | 'icon' | 'custom' | 'profile';\n  align?: 'left' | 'right' | 'center';\n  sortable?: boolean;\n}\n\nexport interface TableData {\n  [key: string]: any;\n}\n\nexport interface ActionIcon {\n  icon: string;\n  tooltip?: string;\n  action: string;\n  color?: string;\n}\n",
            "properties": [
                {
                    "name": "action",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "color",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "tooltip",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 15
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "ColumnDef",
            "id": "interface-ColumnDef-0b7302305511d14c5035f4f164a570f52bb07aee6e383ead00b94b5d124f99a490cf7bc722708d580940ee84e9272af44ad942cdd0b98d15961cdaac6be56297",
            "file": "src/app/shared/interfaces/table.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface ColumnDef {\n  key: string;\n  label: string;\n  type: 'text' | 'tag' | 'button' | 'icon' | 'custom' | 'profile';\n  align?: 'left' | 'right' | 'center';\n  sortable?: boolean;\n}\n\nexport interface TableData {\n  [key: string]: any;\n}\n\nexport interface ActionIcon {\n  icon: string;\n  tooltip?: string;\n  action: string;\n  color?: string;\n}\n",
            "properties": [
                {
                    "name": "align",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"left\" | \"right\" | \"center\"",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "key",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "sortable",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"text\" | \"tag\" | \"button\" | \"icon\" | \"custom\" | \"profile\"",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "loginDTO",
            "id": "interface-loginDTO-acf5554f949c75e3214b463d1545422c59deca8ea88cf0dbb8bebbd38c61d065092639b8526133c6d5fd3093d267a435fadd1d543d5b4e75f7dce6d0b6e7baed",
            "file": "src/app/core/auth/interfaces/login.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface loginDTO {\n    email: string;\n    password: string\n}",
            "properties": [
                {
                    "name": "email",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "password",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "TableData",
            "id": "interface-TableData-0b7302305511d14c5035f4f164a570f52bb07aee6e383ead00b94b5d124f99a490cf7bc722708d580940ee84e9272af44ad942cdd0b98d15961cdaac6be56297",
            "file": "src/app/shared/interfaces/table.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface ColumnDef {\n  key: string;\n  label: string;\n  type: 'text' | 'tag' | 'button' | 'icon' | 'custom' | 'profile';\n  align?: 'left' | 'right' | 'center';\n  sortable?: boolean;\n}\n\nexport interface TableData {\n  [key: string]: any;\n}\n\nexport interface ActionIcon {\n  icon: string;\n  tooltip?: string;\n  action: string;\n  color?: string;\n}\n",
            "properties": [],
            "indexSignatures": [
                {
                    "id": "index-declaration-0b7302305511d14c5035f4f164a570f52bb07aee6e383ead00b94b5d124f99a490cf7bc722708d580940ee84e9272af44ad942cdd0b98d15961cdaac6be56297",
                    "args": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "any",
                    "line": 9,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "kind": 181,
            "methods": [],
            "extends": []
        }
    ],
    "injectables": [],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-3709c3033c64f20648524fb7daf3f4725213ca95021308d1c0590010589de6c23221ea29f62f01482366b54babaae823b1f5285846bbe14019672072fea07bc8",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "title",
                    "defaultValue": "'QuizVerse-Frontend'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "RouterOutlet"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\nimport { PageHeaderComponent } from './shared/components/page-header/page-header.component';\n\n@Component({\n  selector: 'app-root',\n  imports: [RouterOutlet],\n  templateUrl: './app.component.html',\n  styleUrl: './app.component.scss',\n})\nexport class AppComponent {\n  title = 'QuizVerse-Frontend';\n}\n",
            "styleUrl": "./app.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<h1 class=\"text-3xl font-bold underline\">Hello world!</h1>\n"
        },
        {
            "name": "ForgotPasswordComponent",
            "id": "component-ForgotPasswordComponent-55a0a1c73de575975a356f768c101f9eb656266db6dd10a627b124e1ac6451a07cae6fce1138820985a372fe42a182842bac601b53129becd36e138e3abbf7fe",
            "file": "src/app/core/auth/components/forgot-password/forgot-password.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-forgot-password",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./forgot-password.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-forgot-password',\n  imports: [],\n  templateUrl: './forgot-password.component.html',\n  styleUrl: './forgot-password.component.scss'\n})\nexport class ForgotPasswordComponent {\n\n}\n",
            "styleUrl": "./forgot-password.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<p>forgot-password works!</p>\n"
        },
        {
            "name": "LoginComponent",
            "id": "component-LoginComponent-a9b389075a81277d54c9c56dfc15728a06dc961050247f97103d98e7140273644530dbb6bae5350ccc3aef7fe32d03a5812899854f99504b2cf695625d607ce9",
            "file": "src/app/core/auth/components/login/login.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-login",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./login.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-login',\n  imports: [],\n  templateUrl: './login.component.html',\n  styleUrl: './login.component.scss'\n})\nexport class LoginComponent {\n\n}\n",
            "styleUrl": "./login.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<p>login works!</p>\n"
        },
        {
            "name": "PageHeaderComponent",
            "id": "component-PageHeaderComponent-3275d6dbd4145e6d49049c7b3c21588974765f086ed8a6e6f421b61e622e72be20691701a0e4cd17a6ad570b23881a8ae262bd32c60df1bb3ef5cc8b0e43a818",
            "file": "src/app/shared/components/page-header/page-header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-page-header",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./page-header.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "icon",
                    "defaultValue": "'edit'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "subtitle",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "theme",
                    "defaultValue": "'admin'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "\"admin\" | \"user\" | \"quiz\" | \"quizDifficulty\" | \"queDifficulty\" | \"email\" | \"financial\"",
                    "decorators": []
                },
                {
                    "name": "title",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "MatCardModule",
                    "type": "module"
                },
                {
                    "name": "MatIconModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component, Input } from '@angular/core';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatIconModule } from '@angular/material/icon';\n\n@Component({\n  selector: 'app-page-header',\n  imports: [CommonModule, MatCardModule, MatIconModule],\n  templateUrl: './page-header.component.html',\n  styleUrl: './page-header.component.scss',\n})\nexport class PageHeaderComponent {\n  @Input() icon: string = 'edit';\n  @Input() title: string = '';\n  @Input() subtitle: string = '';\n  @Input() theme:\n    | 'admin'\n    | 'user'\n    | 'quiz'\n    | 'quizDifficulty'\n    | 'queDifficulty'\n    | 'email'\n    | 'financial' = 'admin';\n}\n",
            "styleUrl": "./page-header.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<mat-card class=\"page-header-card\" [ngClass]=\"theme\">\n  <div class=\"header-content\">\n    <mat-icon class=\"icon material-icons-outlined\">{{ icon }}</mat-icon>\n    <div>\n      <h2 class=\"title\">{{ title }}</h2>\n      <p class=\"subtitle\">{{ subtitle }}</p>\n    </div>\n  </div>\n</mat-card>\n"
        },
        {
            "name": "TableComponent",
            "id": "component-TableComponent-3713654589eab0b40ade1aba5aa1b6016487db708ed75a8e8ea46f9e1681a2a4dfe521218770781ba8215115caebb334d8898b63acb23e3289066e69d8e4e596",
            "file": "src/app/shared/components/table/table.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-data-table",
            "styleUrls": [
                "./table.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./table.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "actionIcons",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 46,
                    "type": "ActionIcon[]",
                    "decorators": []
                },
                {
                    "name": "columns",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 41,
                    "type": "ColumnDef[]",
                    "decorators": []
                },
                {
                    "name": "columnTemplates",
                    "defaultValue": "{}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 48,
                    "type": "literal type",
                    "decorators": []
                },
                {
                    "name": "dataSource",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 42,
                    "type": "TableData[]",
                    "decorators": []
                },
                {
                    "name": "noDataMessage",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 47,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "pageSize",
                    "defaultValue": "10",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 44,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "pageSizeOptions",
                    "defaultValue": "[5, 10, 20]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 45,
                    "type": "number[]",
                    "decorators": []
                },
                {
                    "name": "tableDescription",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 51,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "tableTitle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 50,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "totalItems",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 43,
                    "type": "number",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "actionClick",
                    "defaultValue": "new EventEmitter<{ action: string; row: TableData }>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 55,
                    "type": "EventEmitter"
                },
                {
                    "name": "pageChange",
                    "defaultValue": "new EventEmitter<{ pageIndex: number; pageSize: number }>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 53,
                    "type": "EventEmitter"
                },
                {
                    "name": "sortChange",
                    "defaultValue": "new EventEmitter<{ active: string; direction: string }>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 54,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "displayedColumns",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 60
                },
                {
                    "name": "paginator",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatPaginator",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 57,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "MatPaginator"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                },
                {
                    "name": "sort",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatSort",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 58,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "MatSort"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnChanges",
                    "args": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 66,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 62,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onActionClick",
                    "args": [
                        {
                            "name": "action",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "row",
                            "type": "TableData",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 93,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "action",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "row",
                            "type": "TableData",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onPageChange",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 85,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onSortChange",
                    "args": [
                        {
                            "name": "sort",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 89,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "sort",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setDisplayedColumns",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 72,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "MatTableModule",
                    "type": "module"
                },
                {
                    "name": "MatPaginatorModule",
                    "type": "module"
                },
                {
                    "name": "MatSortModule",
                    "type": "module"
                },
                {
                    "name": "MatButtonModule",
                    "type": "module"
                },
                {
                    "name": "MatIconModule",
                    "type": "module"
                },
                {
                    "name": "MatTooltipModule",
                    "type": "module"
                },
                {
                    "name": "MatChipsModule",
                    "type": "module"
                },
                {
                    "name": "MatCardModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  ViewChild,\n  OnInit,\n  TemplateRef,\n  SimpleChanges,\n  OnChanges,\n} from '@angular/core';\nimport { MatPaginator, MatPaginatorModule } from '@angular/material/paginator';\nimport { MatSort, MatSortModule } from '@angular/material/sort';\nimport { ColumnDef, TableData, ActionIcon } from '../../interfaces/table.interface';\nimport { CommonModule } from '@angular/common';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatCardModule } from '@angular/material/card';\n\n@Component({\n  selector: 'app-data-table',\n  standalone: true,\n  templateUrl: './table.component.html',\n  styleUrls: ['./table.component.scss'],\n  imports: [\n    CommonModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatSortModule,\n    MatButtonModule,\n    MatIconModule,\n    MatTooltipModule,\n    MatChipsModule,\n    MatCardModule,\n  ],\n})\nexport class TableComponent implements OnInit, OnChanges {\n  @Input() columns: ColumnDef[] = [];\n  @Input() dataSource: TableData[] = [];\n  @Input() totalItems = 0;\n  @Input() pageSize = 10;\n  @Input() pageSizeOptions: number[] = [5, 10, 20];\n  @Input() actionIcons: ActionIcon[] = [];\n  @Input() noDataMessage?: string;\n  @Input() columnTemplates: { [key: string]: TemplateRef<any> } = {};\n\n  @Input() tableTitle?: string;\n  @Input() tableDescription?: string;\n\n  @Output() pageChange = new EventEmitter<{ pageIndex: number; pageSize: number }>();\n  @Output() sortChange = new EventEmitter<{ active: string; direction: string }>();\n  @Output() actionClick = new EventEmitter<{ action: string; row: TableData }>();\n\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n\n  displayedColumns: string[] = [];\n\n  ngOnInit() {\n    this.setDisplayedColumns();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes['dataSource'] || changes['columns'] || changes['actionIcons']) {\n      this.setDisplayedColumns();\n    }\n  }\n\n  private setDisplayedColumns(): void {\n    this.columns = this.columns.map((col) => ({\n      ...col,\n      sortable: col.sortable ?? false,\n    }));\n\n    this.displayedColumns = this.columns.map((col) => col.key);\n\n    if (this.actionIcons?.length) {\n      this.displayedColumns.push('actions');\n    }\n  }\n\n  onPageChange(event: any) {\n    this.pageChange.emit({ pageIndex: event.pageIndex, pageSize: event.pageSize });\n  }\n\n  onSortChange(sort: any) {\n    this.sortChange.emit({ active: sort.active, direction: sort.direction });\n  }\n\n  onActionClick(action: string, row: TableData) {\n    this.actionClick.emit({ action, row });\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".data-table-card {\n  background-color: #ffffff;\n  padding: 24px;\n  box-shadow: 5px 5px 49px 0 rgba(182, 181, 181, 0.75) !important;\n  border: 0.5px solid rgb(218, 217, 217);\n  border-radius: 8px;\n\n  @media (max-width: 768px) {\n    padding: 16px;\n  }\n\n  @media (max-width: 480px) {\n    padding: 12px;\n  }\n}\n\n.table-header {\n  h2 {\n    margin: 0 0 3px 0;\n    font-size: 24px;\n    font-weight: 500;\n    color: #000;\n\n    @media (max-width: 768px) {\n      font-size: 20px;\n    }\n\n    @media (max-width: 480px) {\n      font-size: 18px;\n    }\n  }\n\n  p {\n    margin: 0;\n    font-size: 14px;\n    color: #6c757d;\n\n    @media (max-width: 768px) {\n      font-size: 13px;\n    }\n\n    @media (max-width: 480px) {\n      font-size: 12px;\n    }\n  }\n}\n\n.table-responsive {\n  width: 100%;\n  overflow-x: auto;\n}\n\n.full-width-table {\n  width: 100%;\n  background-color: #ffffff;\n  min-width: 800px;\n\n  tr {\n    white-space: nowrap;\n    td,\n    th {\n      white-space: nowrap;\n      overflow: hidden;\n      text-overflow: ellipsis;\n      vertical-align: middle;\n    }\n\n    &:hover {\n      background-color: #f8f9fa;\n    }\n  }\n}\n\n.table-column-heading {\n  color: #8a96a8;\n  font-weight: 500;\n}\n\n.pagination-container {\n  display: flex;\n  justify-content: flex-end;\n  margin-top: 16px;\n  background-color: #ffffff !important;\n\n  @media (max-width: 600px) {\n    flex-wrap: wrap;\n    padding: 0px;\n  }\n}\n\nmat-paginator,\nmat-paginator .mat-paginator-container,\n.mat-paginator-container {\n  background-color: #ffffff !important;\n}\n\n.no-data-message {\n  text-align: center;\n  padding: 16px;\n  color: #ff4d4d;\n  font-size: 16px;\n\n  @media (max-width: 480px) {\n    font-size: 14px;\n    padding: 12px;\n  }\n}\n\n.profile-cell {\n  display: flex;\n  align-items: center;\n  gap: 10px;\n  flex-shrink: 0;\n\n  img {\n    width: 35px;\n    height: 35px;\n    object-fit: cover;\n    border-radius: 50%;\n    background: #ddd;\n\n    @media (max-width: 480px) {\n      width: 30px;\n      height: 30px;\n    }\n  }\n\n  .info {\n    display: flex;\n    flex-direction: column;\n\n    .name {\n      font-weight: 600;\n      font-size: 14px;\n\n      @media (max-width: 480px) {\n        font-size: 13px;\n      }\n    }\n\n    .email {\n      font-size: 13px;\n      color: #6c757d;\n\n      @media (max-width: 480px) {\n        font-size: 12px;\n      }\n    }\n  }\n}\n",
                    "styleUrl": "./table.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [],
            "implements": [
                "OnInit",
                "OnChanges"
            ],
            "templateData": "<mat-card class=\"data-table-card mat-elevation-z2\">\n  <!-- Optional Header -->\n  <div *ngIf=\"tableTitle || tableDescription\" class=\"table-header mb-4\">\n    <h2 *ngIf=\"tableTitle\">{{ tableTitle }}</h2>\n    <p *ngIf=\"tableDescription\">{{ tableDescription }}</p>\n  </div>\n\n  <!-- Table -->\n  <div class=\"table-responsive\">\n    <table mat-table [dataSource]=\"dataSource\" matSort (matSortChange)=\"onSortChange($event)\"\n      class=\"full-width-table mat-elevation-z1\">\n      <!-- Dynamic Columns -->\n      <ng-container *ngFor=\"let column of columns\" [matColumnDef]=\"column.key\">\n        <ng-container *ngIf=\"column.sortable; else plainHeader\">\n          <th mat-header-cell *matHeaderCellDef mat-sort-header=\"{{ column.key }}\" class=\"table-column-heading\">\n            {{ column.label }}\n          </th>\n        </ng-container>\n\n        <!-- Fallback plain header - without the sorting column header -->\n        <ng-template #plainHeader>\n          <th mat-header-cell *matHeaderCellDef class=\"table-column-heading\">\n            {{ column.label }}\n          </th>\n        </ng-template>\n\n        <td mat-cell *matCellDef=\"let row\">\n          <ng-container [ngSwitch]=\"column.type\">\n            <!-- Text Type -->\n            <ng-container *ngSwitchCase=\"'text'\">{{ row[column.key] }}</ng-container>\n\n            <!-- Tag Type -->\n            <mat-chip *ngSwitchCase=\"'tag'\" selected>\n              {{ row[column.key] }}\n            </mat-chip>\n\n            <!-- Button Type -->\n            <button *ngSwitchCase=\"'button'\" mat-button (click)=\"onActionClick(column.key, row)\">\n              {{ row[column.key] }}\n            </button>\n\n            <!-- Profile Picture Type -->\n            <ng-container *ngSwitchCase=\"'profile'\">\n              <div class=\"profile-cell\">\n                <img [src]=\"row[column.key].image\" alt=\"{{ row[column.key].name }}\" />\n                <div class=\"info\">\n                  <div class=\"name\">{{ row[column.key].name }}</div>\n                  <div class=\"email\">{{ row[column.key].email }}</div>\n                </div>\n              </div>\n            </ng-container>\n\n            <!-- Custom Template -->\n            <ng-container *ngSwitchCase=\"'custom'\">\n              <ng-container *ngTemplateOutlet=\"columnTemplates[column.key]; context: { $implicit: row }\"></ng-container>\n            </ng-container>\n          </ng-container>\n        </td>\n      </ng-container>\n\n      <!-- Actions Column -->\n      <ng-container matColumnDef=\"actions\">\n        <th mat-header-cell *matHeaderCellDef class=\"table-column-heading\">Actions</th>\n        <td mat-cell *matCellDef=\"let row\" class=\"mat-column-actions\">\n          <button *ngFor=\"let icon of actionIcons\" mat-icon-button [ngStyle]=\"{ 'color': icon.color }\"\n            [matTooltip]=\"icon.tooltip || icon.action\" (click)=\"onActionClick(icon.action, row)\">\n            <mat-icon>{{ icon.icon }}</mat-icon>\n          </button>\n        </td>\n      </ng-container>\n\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n\n      <tr class=\"mat-row\" *matNoDataRow>\n        <td [attr.colspan]=\"displayedColumns.length\" class=\"no-data-message\">\n          {{ noDataMessage || 'No data available.' }}\n        </td>\n      </tr>\n    </table>\n  </div>\n\n  <!-- Paginator -->\n  <div *ngIf=\"totalItems > 0\">\n    <div class=\"pagination-container\">\n      <mat-paginator class=\"custom-paginator\" [length]=\"totalItems\" [pageSize]=\"pageSize\"\n        [pageSizeOptions]=\"pageSizeOptions\" (page)=\"onPageChange($event)\">\n      </mat-paginator>\n    </div>\n  </div>\n</mat-card>"
        }
    ],
    "modules": [],
    "miscellaneous": {
        "variables": [
            {
                "name": "AppColors",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/utils/constants.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  adminBackgroundColor: 'linear-gradient(to right, #fff4f2, #fffaf6)',\n  adminTextColor: 'rgb(153 27 27 / var(--tw-text-opacity, 1))',\n  adminBorderColor: 'rgb(254 202 202 / var(--tw-border-opacity, 1))',\n  adminSubtitleColor: 'rgb(185 28 28 / var(--tw-text-opacity, 1))',\n\n  userBackgroundColor: 'linear-gradient(to right, #eff6ff, #e0f2fe)', // soft blue tones\n  userTextColor: '#1e40af',\n  userBorderColor: '#bfdbfe',\n  userSubtitleColor: '#1d4ed8',\n\n  quizBackgroundColor: 'linear-gradient(to right, #ecebff, #f3f4ff)', // violet tones\n  quizTextColor: '#3730a3',\n  quizBorderColor: '#c7d2fe',\n  quizSubtitleColor: '#4338ca',\n\n  queDifficultyBackgroundColor: 'linear-gradient(to right, #f3e8ff, #faf5ff)', // purple pastel\n  queDifficultyTextColor: '#6b21a8',\n  queDifficultyBorderColor: '#e9d5ff',\n  queDifficultySubtitleColor: '#7e22ce',\n\n  quizDifficultyBackgroundColor: 'linear-gradient(to right, #fff7ed, #fff3e0)', // soft orange\n  quizDifficultyTextColor: '#9a3412',\n  quizDifficultyBorderColor: '#fed7aa',\n  quizDifficultySubtitleColor: '#c2410c',\n\n  emailBackgroundColor: 'linear-gradient(to right, #eff6ff, #e0f2fe)', // same as user\n  emailTextColor: '#1e40af',\n  emailBorderColor: '#bfdbfe',\n  emailSubtitleColor: '#1d4ed8',\n\n  financialBackgroundColor: 'linear-gradient(to right, #ecfdf5, #d1fae5)', // mint green\n  financialTextColor: '#065f46',\n  financialBorderColor: '#a7f3d0',\n  financialSubtitleColor: '#047857',\n\n  darkText: '#333',\n}"
            },
            {
                "name": "appConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/app.config.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ApplicationConfig",
                "defaultValue": "{\n  providers: [provideZoneChangeDetection({ eventCoalescing: true }), provideRouter(routes)]\n}"
            },
            {
                "name": "authGuard",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/guards/auth.guard.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "CanActivateFn",
                "defaultValue": "(route, state) => {\n  return true;\n}"
            },
            {
                "name": "basicUserData",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/interfaces/table-mock-data.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\n  { name: 'John Doe', email: 'john@example.com' },\n  { name: 'Jane Smith', email: 'jane@example.com' },\n]"
            },
            {
                "name": "categoriesData",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/interfaces/table-mock-data.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\n  {\n    category: 'Technology',\n    description: 'Programming, Software, Hardware, AI/ML',\n    quizCount: '245 quizzes',\n    status: 'Active',\n    created: '2024-01-15',\n  },\n  {\n    category: 'Science',\n    description: 'Physics, Chemistry, Biology, Mathematics',\n    quizCount: '189 quizzes',\n    status: 'Active',\n    created: '2024-01-15',\n  },\n  {\n    category: 'History',\n    description: 'World History, Ancient Civilizations, Wars',\n    quizCount: '156 quizzes',\n    status: 'Active',\n    created: '2024-01-15',\n  },\n  {\n    category: 'Literature',\n    description: 'Classic Literature, Poetry, Modern Fiction',\n    quizCount: '98 quizzes',\n    status: 'Inactive',\n    created: '2024-01-15',\n  },\n]"
            },
            {
                "name": "defaultActions",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/interfaces/table-mock-data.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\n  { icon: 'visibility', action: 'view' },\n  { icon: 'edit', action: 'edit' },\n  { icon: 'delete', action: 'delete', color: '#000000' },\n]"
            },
            {
                "name": "emailData",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/interfaces/table-mock-data.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\n  {\n    type: 'Password Reset',\n    title: 'Password Reset Request',\n    subject: 'Reset Your Password - QuizPlatform',\n    status: 'Active',\n  },\n  {\n    type: 'Email Verification',\n    title: 'Verify Your Email',\n    subject: 'Verify Your Email Address - QuizPlatform',\n    status: 'Active',\n  },\n  {\n    type: 'Battle Request',\n    title: 'Battle Challenge Received',\n    subject: \"You've Been Challenged to a Battle!\",\n    status: 'Active',\n  },\n]"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.dev.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n    production: false,\n    baseUrl: \"https://localhost:48348/api\",\n}"
            },
            {
                "name": "errorHandlerInterceptor",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/interceptors/error-handler.interceptor.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "HttpInterceptorFn",
                "defaultValue": "(req, next) => {\n  return next(req);\n}"
            },
            {
                "name": "largeUserList",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/interfaces/table-mock-data.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Array.from({ length: 50 }, (_, i) => ({\n  id: i + 1,\n  name: `User ${i + 1}`,\n  status: i % 2 === 0 ? 'Active' : 'Inactive',\n}))"
            },
            {
                "name": "mixedTypeData",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/interfaces/table-mock-data.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\n  { id: 1, name: 'Alice', status: 'Active', score: 88, actionBtn: 'View' },\n  { id: 2, name: 'Bob', status: 'Inactive', score: 74, actionBtn: 'Edit' },\n]"
            },
            {
                "name": "profileData",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/interfaces/table-mock-data.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\n  {\n    profile: {\n      name: 'Alice Johnson',\n      email: 'alice@example.com',\n      image: 'https://i.pravatar.cc/150?img=11',\n    },\n    role: 'Admin',\n    status: 'Active',\n  },\n  {\n    profile: {\n      name: 'Bob Smith',\n      email: 'bob@example.com',\n      image: 'https://i.pravatar.cc/150?img=12',\n    },\n    role: 'User',\n    status: 'Inactive',\n  },\n  {\n    profile: {\n      name: 'Charlie Brown',\n      email: 'charlie@example.com',\n      image: 'https://i.pravatar.cc/150?img=13',\n    },\n    role: 'Moderator',\n    status: 'Pending',\n  },\n]"
            },
            {
                "name": "questionPoolData",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/interfaces/table-mock-data.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\n  {\n    question: 'What is the capital of France?',\n    correctAnswer: 'Paris',\n    type: 'Multiple Choice',\n    category: 'Geography',\n    difficulty: 'Easy',\n  },\n  {\n    question: 'What is 2 + 2?',\n    correctAnswer: '4',\n    type: 'Multiple Choice',\n    category: 'Mathematics',\n    difficulty: 'Easy',\n  },\n  {\n    question: 'What is 2 + 2?',\n    correctAnswer: '4',\n    type: 'Multiple Choice',\n    category: 'Mathematics',\n    difficulty: 'Easy',\n  },\n]"
            },
            {
                "name": "tagsOnlyData",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/interfaces/table-mock-data.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\n  { type: 'Alert', status: 'Active' },\n  { type: 'Warning', status: 'Inactive' },\n]"
            },
            {
                "name": "textButtonData",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/interfaces/table-mock-data.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\n  { title: 'Do Task 1', actionsLabel: 'Start' },\n  { title: 'Do Task 2', actionsLabel: 'Run' },\n]"
            },
            {
                "name": "transactionData",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/interfaces/table-mock-data.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\n  {\n    type: 'Quiz Purchase',\n    user: 'John Doe',\n    amount: 15.99,\n    status: 'Completed',\n    date: '2024-12-20',\n    method: 'Credit Card',\n  },\n  {\n    type: 'Tournament Entry',\n    user: 'Mike Johnson',\n    amount: 25.0,\n    status: 'Completed',\n    date: '2024-12-18',\n    method: 'Stripe',\n  },\n  {\n    type: 'Subscription',\n    user: 'Sarah Wilson',\n    amount: 9.99,\n    status: 'Completed',\n    date: '2024-12-17',\n    method: 'Credit Card',\n  },\n  {\n    type: 'Quiz Purchase',\n    user: 'Emma Davis',\n    amount: 12.5,\n    status: 'Pending',\n    date: '2024-12-16',\n    method: 'PayPal',\n  },\n]"
            }
        ],
        "functions": [],
        "typealiases": [],
        "enumerations": [],
        "groupedVariables": {
            "src/app/utils/constants.ts": [
                {
                    "name": "AppColors",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/utils/constants.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  adminBackgroundColor: 'linear-gradient(to right, #fff4f2, #fffaf6)',\n  adminTextColor: 'rgb(153 27 27 / var(--tw-text-opacity, 1))',\n  adminBorderColor: 'rgb(254 202 202 / var(--tw-border-opacity, 1))',\n  adminSubtitleColor: 'rgb(185 28 28 / var(--tw-text-opacity, 1))',\n\n  userBackgroundColor: 'linear-gradient(to right, #eff6ff, #e0f2fe)', // soft blue tones\n  userTextColor: '#1e40af',\n  userBorderColor: '#bfdbfe',\n  userSubtitleColor: '#1d4ed8',\n\n  quizBackgroundColor: 'linear-gradient(to right, #ecebff, #f3f4ff)', // violet tones\n  quizTextColor: '#3730a3',\n  quizBorderColor: '#c7d2fe',\n  quizSubtitleColor: '#4338ca',\n\n  queDifficultyBackgroundColor: 'linear-gradient(to right, #f3e8ff, #faf5ff)', // purple pastel\n  queDifficultyTextColor: '#6b21a8',\n  queDifficultyBorderColor: '#e9d5ff',\n  queDifficultySubtitleColor: '#7e22ce',\n\n  quizDifficultyBackgroundColor: 'linear-gradient(to right, #fff7ed, #fff3e0)', // soft orange\n  quizDifficultyTextColor: '#9a3412',\n  quizDifficultyBorderColor: '#fed7aa',\n  quizDifficultySubtitleColor: '#c2410c',\n\n  emailBackgroundColor: 'linear-gradient(to right, #eff6ff, #e0f2fe)', // same as user\n  emailTextColor: '#1e40af',\n  emailBorderColor: '#bfdbfe',\n  emailSubtitleColor: '#1d4ed8',\n\n  financialBackgroundColor: 'linear-gradient(to right, #ecfdf5, #d1fae5)', // mint green\n  financialTextColor: '#065f46',\n  financialBorderColor: '#a7f3d0',\n  financialSubtitleColor: '#047857',\n\n  darkText: '#333',\n}"
                }
            ],
            "src/app/app.config.ts": [
                {
                    "name": "appConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/app.config.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ApplicationConfig",
                    "defaultValue": "{\n  providers: [provideZoneChangeDetection({ eventCoalescing: true }), provideRouter(routes)]\n}"
                }
            ],
            "src/app/guards/auth.guard.ts": [
                {
                    "name": "authGuard",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/guards/auth.guard.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "CanActivateFn",
                    "defaultValue": "(route, state) => {\n  return true;\n}"
                }
            ],
            "src/app/shared/interfaces/table-mock-data.ts": [
                {
                    "name": "basicUserData",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/interfaces/table-mock-data.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\n  { name: 'John Doe', email: 'john@example.com' },\n  { name: 'Jane Smith', email: 'jane@example.com' },\n]"
                },
                {
                    "name": "categoriesData",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/interfaces/table-mock-data.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\n  {\n    category: 'Technology',\n    description: 'Programming, Software, Hardware, AI/ML',\n    quizCount: '245 quizzes',\n    status: 'Active',\n    created: '2024-01-15',\n  },\n  {\n    category: 'Science',\n    description: 'Physics, Chemistry, Biology, Mathematics',\n    quizCount: '189 quizzes',\n    status: 'Active',\n    created: '2024-01-15',\n  },\n  {\n    category: 'History',\n    description: 'World History, Ancient Civilizations, Wars',\n    quizCount: '156 quizzes',\n    status: 'Active',\n    created: '2024-01-15',\n  },\n  {\n    category: 'Literature',\n    description: 'Classic Literature, Poetry, Modern Fiction',\n    quizCount: '98 quizzes',\n    status: 'Inactive',\n    created: '2024-01-15',\n  },\n]"
                },
                {
                    "name": "defaultActions",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/interfaces/table-mock-data.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\n  { icon: 'visibility', action: 'view' },\n  { icon: 'edit', action: 'edit' },\n  { icon: 'delete', action: 'delete', color: '#000000' },\n]"
                },
                {
                    "name": "emailData",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/interfaces/table-mock-data.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\n  {\n    type: 'Password Reset',\n    title: 'Password Reset Request',\n    subject: 'Reset Your Password - QuizPlatform',\n    status: 'Active',\n  },\n  {\n    type: 'Email Verification',\n    title: 'Verify Your Email',\n    subject: 'Verify Your Email Address - QuizPlatform',\n    status: 'Active',\n  },\n  {\n    type: 'Battle Request',\n    title: 'Battle Challenge Received',\n    subject: \"You've Been Challenged to a Battle!\",\n    status: 'Active',\n  },\n]"
                },
                {
                    "name": "largeUserList",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/interfaces/table-mock-data.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Array.from({ length: 50 }, (_, i) => ({\n  id: i + 1,\n  name: `User ${i + 1}`,\n  status: i % 2 === 0 ? 'Active' : 'Inactive',\n}))"
                },
                {
                    "name": "mixedTypeData",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/interfaces/table-mock-data.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\n  { id: 1, name: 'Alice', status: 'Active', score: 88, actionBtn: 'View' },\n  { id: 2, name: 'Bob', status: 'Inactive', score: 74, actionBtn: 'Edit' },\n]"
                },
                {
                    "name": "profileData",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/interfaces/table-mock-data.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\n  {\n    profile: {\n      name: 'Alice Johnson',\n      email: 'alice@example.com',\n      image: 'https://i.pravatar.cc/150?img=11',\n    },\n    role: 'Admin',\n    status: 'Active',\n  },\n  {\n    profile: {\n      name: 'Bob Smith',\n      email: 'bob@example.com',\n      image: 'https://i.pravatar.cc/150?img=12',\n    },\n    role: 'User',\n    status: 'Inactive',\n  },\n  {\n    profile: {\n      name: 'Charlie Brown',\n      email: 'charlie@example.com',\n      image: 'https://i.pravatar.cc/150?img=13',\n    },\n    role: 'Moderator',\n    status: 'Pending',\n  },\n]"
                },
                {
                    "name": "questionPoolData",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/interfaces/table-mock-data.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\n  {\n    question: 'What is the capital of France?',\n    correctAnswer: 'Paris',\n    type: 'Multiple Choice',\n    category: 'Geography',\n    difficulty: 'Easy',\n  },\n  {\n    question: 'What is 2 + 2?',\n    correctAnswer: '4',\n    type: 'Multiple Choice',\n    category: 'Mathematics',\n    difficulty: 'Easy',\n  },\n  {\n    question: 'What is 2 + 2?',\n    correctAnswer: '4',\n    type: 'Multiple Choice',\n    category: 'Mathematics',\n    difficulty: 'Easy',\n  },\n]"
                },
                {
                    "name": "tagsOnlyData",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/interfaces/table-mock-data.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\n  { type: 'Alert', status: 'Active' },\n  { type: 'Warning', status: 'Inactive' },\n]"
                },
                {
                    "name": "textButtonData",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/interfaces/table-mock-data.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\n  { title: 'Do Task 1', actionsLabel: 'Start' },\n  { title: 'Do Task 2', actionsLabel: 'Run' },\n]"
                },
                {
                    "name": "transactionData",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/interfaces/table-mock-data.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\n  {\n    type: 'Quiz Purchase',\n    user: 'John Doe',\n    amount: 15.99,\n    status: 'Completed',\n    date: '2024-12-20',\n    method: 'Credit Card',\n  },\n  {\n    type: 'Tournament Entry',\n    user: 'Mike Johnson',\n    amount: 25.0,\n    status: 'Completed',\n    date: '2024-12-18',\n    method: 'Stripe',\n  },\n  {\n    type: 'Subscription',\n    user: 'Sarah Wilson',\n    amount: 9.99,\n    status: 'Completed',\n    date: '2024-12-17',\n    method: 'Credit Card',\n  },\n  {\n    type: 'Quiz Purchase',\n    user: 'Emma Davis',\n    amount: 12.5,\n    status: 'Pending',\n    date: '2024-12-16',\n    method: 'PayPal',\n  },\n]"
                }
            ],
            "src/environments/environment.dev.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.dev.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n    production: false,\n    baseUrl: \"https://localhost:48348/api\",\n}"
                }
            ],
            "src/app/interceptors/error-handler.interceptor.ts": [
                {
                    "name": "errorHandlerInterceptor",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/interceptors/error-handler.interceptor.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "HttpInterceptorFn",
                    "defaultValue": "(req, next) => {\n  return next(req);\n}"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {}
    },
    "routes": [],
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/app.config.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "appConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/auth/components/forgot-password/forgot-password.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ForgotPasswordComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/auth/components/login/login.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LoginComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/auth/interfaces/login.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "loginDTO",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/guards/auth.guard.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "authGuard",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/interceptors/error-handler.interceptor.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "errorHandlerInterceptor",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/page-header/page-header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PageHeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/table/table.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TableComponent",
                "coveragePercent": 0,
                "coverageCount": "0/23",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/interfaces/table-mock-data.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "basicUserData",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/interfaces/table-mock-data.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "categoriesData",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/interfaces/table-mock-data.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "defaultActions",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/interfaces/table-mock-data.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "emailData",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/interfaces/table-mock-data.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "largeUserList",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/interfaces/table-mock-data.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "mixedTypeData",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/interfaces/table-mock-data.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "profileData",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/interfaces/table-mock-data.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "questionPoolData",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/interfaces/table-mock-data.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "tagsOnlyData",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/interfaces/table-mock-data.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "textButtonData",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/interfaces/table-mock-data.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "transactionData",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/interfaces/table.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ActionIcon",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/interfaces/table.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ColumnDef",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/interfaces/table.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "TableData",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/utils/constants.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "AppColors",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.dev.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}