{
    "pipes": [],
    "interfaces": [
        {
            "name": "loginDTO",
            "id": "interface-loginDTO-2e7410060f1ad4eb3711ca7e439a2c70ba72d8a2d619b2b0cf7e6a1cd7818a18e304c872f92f97de24a758453806a148e7052a68eb875adfa6a826935bd843fa",
            "file": "src/app/core/auth/interfaces/login.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface loginDTO {\r\n    email: string;\r\n    password: string\r\n}",
            "properties": [
                {
                    "name": "email",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "password",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        }
    ],
    "injectables": [],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-1cbcf173888b839a2756aa77a3156aba67bb74e443d28924af466ceaca61630ce1591bf311e2c5b9a98e70f18bae1d21fd282e35c2d0616eacee76c7947ce17a",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "title",
                    "defaultValue": "'QuizVerse-Frontend'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "RouterOutlet"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { RouterOutlet } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  imports: [RouterOutlet],\r\n  templateUrl: './app.component.html',\r\n  styleUrl: './app.component.scss'\r\n})\r\nexport class AppComponent {\r\n  title = 'QuizVerse-Frontend';\r\n}\r\n",
            "styleUrl": "./app.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<h1 class=\"text-3xl font-bold underline\">Hello world!</h1>\r\n"
        },
        {
            "name": "CardComponent",
            "id": "component-CardComponent-74a74aa5cebcb9979625edb9897bab532523f63481ce3a9f177421e4e56f11c9177fd8e9b7a0a9acafacc2fdda043348b33db30b590454abe2ba9d4d4dbe1d88",
            "file": "src/app/shared/components/card/card.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-card",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./card.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "defaultValue": "'white'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "\"black\" | \"green\" | \"red\" | \"blue\" | \"purple\" | \"white\" | \"gray\" | \"orange\" | \"yellow\"",
                    "decorators": []
                },
                {
                    "name": "icon",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "status",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "subtitle",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "subtitleColor",
                    "defaultValue": "'purple'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "\"black\" | \"green\" | \"red\" | \"blue\" | \"purple\" | \"white\" | \"gray\" | \"orange\" | \"yellow\"",
                    "decorators": []
                },
                {
                    "name": "title",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "value",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "string | number",
                    "decorators": []
                },
                {
                    "name": "valueColor",
                    "defaultValue": "'black'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "\"black\" | \"green\" | \"red\" | \"blue\" | \"purple\" | \"white\" | \"gray\" | \"orange\" | \"yellow\"",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "colorMap",
                    "defaultValue": "{\r\n    black: '#000000',\r\n    green: '#22c55e',\r\n    red: '#ef4444',\r\n    blue: '#3b82f6',\r\n    purple: '#8b5cf6',\r\n    white: '#ffffff',\r\n    gray: '#6b7280',\r\n    orange: '#f97316',\r\n    yellow: '#eab308'\r\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Record<string | string>",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "getCardStyles",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 72,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getStatusBackgroundColor",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 64,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "resolveColor",
                    "args": [
                        {
                            "name": "color",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "fallback",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 35,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "color",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "fallback",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "MatCardModule",
                    "type": "module"
                },
                {
                    "name": "MatIconModule",
                    "type": "module"
                },
                {
                    "name": "MatButtonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { Component, Input } from '@angular/core';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatIconModule } from '@angular/material/icon';\r\n\r\n@Component({\r\n  selector: 'app-card',\r\n  imports: [CommonModule, MatCardModule, MatIconModule, MatButtonModule],\r\n  templateUrl: './card.component.html',\r\n  styleUrl: './card.component.scss'\r\n})\r\nexport class CardComponent {\r\n  @Input() title: string = '';\r\n  @Input() value: string | number = '';\r\n  @Input() subtitle: string = '';\r\n  @Input() icon: string = '';\r\n  @Input() status: string = '';\r\n  @Input() subtitleColor: 'black' | 'green' | 'red' | 'blue' | 'purple' | 'white' | 'gray' | 'orange' | 'yellow' = 'purple';\r\n  @Input() valueColor: 'black' | 'green' | 'red' | 'blue' | 'purple' | 'white' | 'gray' | 'orange' | 'yellow' = 'black';\r\n  @Input() backgroundColor: 'black' | 'green' | 'red' | 'blue' | 'purple' | 'white' | 'gray' | 'orange' | 'yellow' = 'white';\r\n\r\n  private colorMap: Record<string, string> = {\r\n    black: '#000000',\r\n    green: '#22c55e',\r\n    red: '#ef4444',\r\n    blue: '#3b82f6',\r\n    purple: '#8b5cf6',\r\n    white: '#ffffff',\r\n    gray: '#6b7280',\r\n    orange: '#f97316',\r\n    yellow: '#eab308'\r\n  };\r\n\r\n  private resolveColor(color: string, fallback: string): string {\r\n    const lower = color?.toLowerCase();\r\n    return this.colorMap[lower] || this.colorMap[fallback];\r\n  }\r\n\r\n  get resolvedSubtitleColor(): string {\r\n    return this.resolveColor(this.subtitleColor, 'purple');\r\n  }\r\n\r\n  get resolvedValueColor(): string {\r\n    return this.resolveColor(this.valueColor, 'black');\r\n  }\r\n\r\n  get resolvedBackgroundColor(): string {\r\n    return this.resolveColor(this.backgroundColor, 'white');\r\n  }\r\n\r\n  get hasRightElement(): boolean {\r\n    return !!(this.icon || this.status);\r\n  }\r\n\r\n  get showIcon(): boolean {\r\n    return !!this.icon && !this.status;\r\n  }\r\n\r\n  get showStatus(): boolean {\r\n    return !!this.status;\r\n  }\r\n\r\n  getStatusBackgroundColor(): string {\r\n    const hex = this.resolvedSubtitleColor.replace('#', '');\r\n    const r = parseInt(hex.substr(0, 2), 16);\r\n    const g = parseInt(hex.substr(2, 2), 16);\r\n    const b = parseInt(hex.substr(4, 2), 16);\r\n    return `rgba(${r}, ${g}, ${b}, 0.1)`;\r\n  }\r\n\r\n  getCardStyles(): any {\r\n    return {\r\n      'background-color': this.resolvedBackgroundColor\r\n    };\r\n  }\r\n}\r\n",
            "styleUrl": "./card.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "accessors": {
                "resolvedSubtitleColor": {
                    "name": "resolvedSubtitleColor",
                    "getSignature": {
                        "name": "resolvedSubtitleColor",
                        "type": "string",
                        "returnType": "string",
                        "line": 40
                    }
                },
                "resolvedValueColor": {
                    "name": "resolvedValueColor",
                    "getSignature": {
                        "name": "resolvedValueColor",
                        "type": "string",
                        "returnType": "string",
                        "line": 44
                    }
                },
                "resolvedBackgroundColor": {
                    "name": "resolvedBackgroundColor",
                    "getSignature": {
                        "name": "resolvedBackgroundColor",
                        "type": "string",
                        "returnType": "string",
                        "line": 48
                    }
                },
                "hasRightElement": {
                    "name": "hasRightElement",
                    "getSignature": {
                        "name": "hasRightElement",
                        "type": "boolean",
                        "returnType": "boolean",
                        "line": 52
                    }
                },
                "showIcon": {
                    "name": "showIcon",
                    "getSignature": {
                        "name": "showIcon",
                        "type": "boolean",
                        "returnType": "boolean",
                        "line": 56
                    }
                },
                "showStatus": {
                    "name": "showStatus",
                    "getSignature": {
                        "name": "showStatus",
                        "type": "boolean",
                        "returnType": "boolean",
                        "line": 60
                    }
                }
            },
            "templateData": "<mat-card class=\"stats-card\" [ngStyle]=\"getCardStyles()\">\r\n  <mat-card-content>\r\n    <div class=\"card-header\">\r\n      <div class=\"card-title-section\">\r\n        <h3 class=\"card-title\">{{ title }}</h3>\r\n        <div class=\"card-value\" [ngStyle]=\"{ 'color': resolvedValueColor }\">\r\n          {{ value }}\r\n        </div>\r\n        <p class=\"card-subtitle\" *ngIf=\"subtitle\" [ngStyle]=\"{ 'color': resolvedSubtitleColor }\">\r\n          {{ subtitle }}\r\n        </p>\r\n      </div>\r\n\r\n      <div class=\"card-right-section\" *ngIf=\"hasRightElement\">\r\n        <div class=\"card-icon\" *ngIf=\"showIcon\" [ngStyle]=\"{ 'color': resolvedSubtitleColor }\">\r\n          <mat-icon>{{ icon }}</mat-icon>\r\n        </div>\r\n\r\n        <div class=\"card-status\" *ngIf=\"showStatus\" [ngStyle]=\"{\r\n            'color': resolvedSubtitleColor,\r\n            'background-color': getStatusBackgroundColor()\r\n          }\">\r\n          <span>{{ status }}</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </mat-card-content>\r\n</mat-card>"
        },
        {
            "name": "ForgotPasswordComponent",
            "id": "component-ForgotPasswordComponent-4d4c05fc141147ee863b2b8702cc2bf5b0ea8c72e17cb249ff903882b58c4b59525f8f5a1cfdbde8a39687d816e9838885b1ad904e3f1aff676b6d7dc3eefe40",
            "file": "src/app/core/auth/components/forgot-password/forgot-password.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-forgot-password",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./forgot-password.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-forgot-password',\r\n  imports: [],\r\n  templateUrl: './forgot-password.component.html',\r\n  styleUrl: './forgot-password.component.scss'\r\n})\r\nexport class ForgotPasswordComponent {\r\n\r\n}\r\n",
            "styleUrl": "./forgot-password.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<p>forgot-password works!</p>\r\n"
        },
        {
            "name": "LoginComponent",
            "id": "component-LoginComponent-698c283bf73a83805b5921ee908272873eef876264f2bc08cbc24f09a2a77e286cb21cad76333ae178dd72187ee3f0da68fb37bdba9076d42b254eefc3816ba8",
            "file": "src/app/core/auth/components/login/login.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-login",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./login.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  imports: [],\r\n  templateUrl: './login.component.html',\r\n  styleUrl: './login.component.scss'\r\n})\r\nexport class LoginComponent {\r\n\r\n}\r\n",
            "styleUrl": "./login.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<p>login works!</p>\r\n"
        }
    ],
    "modules": [],
    "miscellaneous": {
        "variables": [
            {
                "name": "appConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/app.config.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ApplicationConfig",
                "defaultValue": "{\r\n  providers: [provideZoneChangeDetection({ eventCoalescing: true }), provideRouter(routes)]\r\n}"
            },
            {
                "name": "authGuard",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/guards/auth.guard.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "CanActivateFn",
                "defaultValue": "(route, state) => {\r\n  return true;\r\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.dev.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n    production: false,\r\n    baseUrl: \"https://localhost:48348/api\",\r\n}"
            },
            {
                "name": "errorHandlerInterceptor",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/interceptors/error-handler.interceptor.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "HttpInterceptorFn",
                "defaultValue": "(req, next) => {\r\n  return next(req);\r\n}"
            }
        ],
        "functions": [],
        "typealiases": [],
        "enumerations": [],
        "groupedVariables": {
            "src/app/app.config.ts": [
                {
                    "name": "appConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/app.config.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ApplicationConfig",
                    "defaultValue": "{\r\n  providers: [provideZoneChangeDetection({ eventCoalescing: true }), provideRouter(routes)]\r\n}"
                }
            ],
            "src/app/guards/auth.guard.ts": [
                {
                    "name": "authGuard",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/guards/auth.guard.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "CanActivateFn",
                    "defaultValue": "(route, state) => {\r\n  return true;\r\n}"
                }
            ],
            "src/environments/environment.dev.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.dev.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n    production: false,\r\n    baseUrl: \"https://localhost:48348/api\",\r\n}"
                }
            ],
            "src/app/interceptors/error-handler.interceptor.ts": [
                {
                    "name": "errorHandlerInterceptor",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/interceptors/error-handler.interceptor.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "HttpInterceptorFn",
                    "defaultValue": "(req, next) => {\r\n  return next(req);\r\n}"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {}
    },
    "routes": [],
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/app.config.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "appConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/auth/components/forgot-password/forgot-password.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ForgotPasswordComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/auth/components/login/login.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LoginComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/auth/interfaces/login.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "loginDTO",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/guards/auth.guard.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "authGuard",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/interceptors/error-handler.interceptor.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "errorHandlerInterceptor",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/card/card.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.dev.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}